using Microsoft.AspNetCore.Mvc.ModelBinding;
using Newtonsoft.Json;

namespace BUGGAFIT_BACK.DTOs.Response
{
    public class ResponseClass
    {
        /// <summary>
        /// It returns a new instance of the ResponseObject class with the Type property set to "C" (for
        /// Custom), the StatusCode property set to the statusCode parameter, and the Message property
        /// set to the message parameter
        /// </summary>
        /// <param name="statusCode">The HTTP status code you want to return.</param>
        /// <param name="message">The message to be displayed to the user.</param>
        /// <returns>
        /// A new instance of the ResponseObject class.
        /// </returns>
        public static ResponseObject Response(int statusCode, string message)
        {
            return new ResponseObject()
            {
                Type = "C", //Custom
                StatusCode = statusCode, //HTTP Status Code
                Message = message
            };
        }

        /// <summary>
        /// It returns a new instance of the ResponseObject class with the Type property set to "C" (for
        /// Custom), the StatusCode property set to the statusCode parameter, and the Message property
        /// set to the message parameter
        /// </summary>
        /// <param name="statusCode">The HTTP status code you want to return.</param>
        /// <param name="data">This is the data that you want to return to the client.</param>
        /// <returns>
        /// A new instance of the ResponseObject class.
        /// </returns>
        public static ResponseObject Response(int statusCode, object data)
        {
            return new ResponseObject()
            {
                Type = "C", //Custom
                StatusCode = statusCode, //HTTP Status Code
                Data = data
            };
        }

        /// <summary>
        /// This function returns a new instance of the ResponseObject class with the Type property set
        /// to "C" (Custom), the StatusCode property set to the statusCode parameter, the Message
        /// property set to the message parameter, and the Token property set to the token parameter
        /// </summary>
        /// <param name="statusCode">HTTP Status Code</param>
        /// <param name="message">The message you want to display to the user.</param>
        /// <param name="token">The token that was generated by the server.</param>
        /// <returns>
        /// A new instance of the ResponseObject class.
        /// </returns>
        public static ResponseObject Response(int statusCode, string message, string token)
        {
            return new ResponseObject()
            {
                Type = "C", //Custom
                StatusCode = statusCode, //HTTP Status Code
                Message = message,
                Token = token
            };
        }

        /// <summary>
        /// It returns a new instance of the ResponseObject class with the specified parameters
        /// </summary>
        /// <param name="statusCode">HTTP Status Code</param>
        /// <param name="message">The message you want to display to the user.</param>
        /// <param name="data">This is the data that you want to return to the client.</param>
        /// <param name="token">This is the token that is generated by the server.</param>
        /// <returns>
        /// A new instance of the ResponseObject class.
        /// </returns>
        public static ResponseObject Response(int statusCode, string message, object data, string token)
        {
            return new ResponseObject()
            {
                Type = "C", //Custom
                StatusCode = statusCode, //HTTP Status Code
                Message = message,
                Data = data,
                Token = token
            };
        }

        /// <summary>
        /// This function returns a custom response object with the specified status code, message, and
        /// data
        /// </summary>
        /// <param name="statusCode">HTTP Status Code</param>
        /// <param name="message">The message you want to display to the user.</param>
        /// <param name="data">The data you want to return to the client.</param>
        /// <returns>
        /// A new instance of the ResponseObject class.
        /// </returns>
        public static ResponseObject Response(int statusCode, string message, object data)
        {
            return new ResponseObject()
            {
                Type = "C", //Custom
                StatusCode = statusCode, //HTTP Status Code
                Message = message,
                Data = data,
                Token = "no token"
            };
        }

        public static ResponseErrorObject ErrorResponse(int statusCode, string message, Exception error)
        {
            return new ResponseErrorObject()
            {
                Type = "C", //Custom
                StatusCode = statusCode, //HTTP Status Code
                Message = message, //Error message
                Details = error.InnerException == null ? "" : error.InnerException.Message, // exception
            };
        }
        public static ResponseErrorObject ErrorResponse(int statusCode, string message, string details)
        {
            return new ResponseErrorObject()
            {
                Type = "C", //Custom
                StatusCode = statusCode, //HTTP Status Code
                Message = message, //Error message
                Details = details, // exception
            };
        }

        public static List<ModelErrors> GetModelStateErrors(ModelStateDictionary Model)
        {
            return Model.Select(x => new ModelErrors() { Type = "M", Key = x.Key, Messages = x.Value.Errors.Select(y => y.ErrorMessage).ToList() }).ToList();
        }

        public static ResponseObject GetModelStateErrors(int statusCode, string message, ModelStateDictionary Model)
        {
            var modelList = Model.Select(x => new ModelErrors() { Type = "M", Key = x.Key, Messages = x.Value.Errors.Select(y => y.ErrorMessage).ToList() }).ToList();

            return new ResponseObject
            {
                StatusCode = statusCode, //HTTP Status Code
                Message = message,
                Data = JsonConvert.SerializeObject(modelList)
            };
        }
    }

    [Serializable]
    public class ResponseObject
    {
        public string Type { get; set; }
        public int StatusCode { get; set; }
        public string Message { get; set; }
        public object Data { get; set; }
        public string Token { get; set; }

    }

    [Serializable]
    public class ResponseErrorObject
    {
        public string Type { get; set; }
        public int StatusCode { get; set; }
        public string Message { get; set; }
        public string Details { get; set; }

    }

    public class ModelErrors
    {
        public string Type { get; set; }
        public string Key { get; set; }
        public List<string> Messages { get; set; }
    }
}
